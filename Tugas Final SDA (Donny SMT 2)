import os

dataTransaksi = []

class Node:
    def __init__(self, SKU, nama_barang, harga_satuan, jumlah_stok):
        self.SKU = SKU
        self.nama_barang = nama_barang
        self.harga_satuan = harga_satuan
        self.jumlah_stok = jumlah_stok
        self.left = None
        self.right = None

class BinarySearchTree:
    def __init__(self):
        self.root = None

    def insert(self, SKU, nama_barang, harga_satuan, jumlah_stok):
        self.root = self._insert_recursive(self.root, SKU, nama_barang, harga_satuan, jumlah_stok)

    def _insert_recursive(self, node, SKU, nama_barang, harga_satuan, jumlah_stok):
        if node is None:
            return Node(SKU, nama_barang, harga_satuan, jumlah_stok)
        if SKU < node.SKU:
            node.left = self._insert_recursive(node.left, SKU, nama_barang, harga_satuan, jumlah_stok)
        else:
            node.right = self._insert_recursive(node.right, SKU, nama_barang, harga_satuan, jumlah_stok)
        return node

    def restok(self, SKU, jumlah_stok_baru):
        self._restok_recursive(self.root, SKU, jumlah_stok_baru)

    def _restok_recursive(self, node, SKU, jumlah_stok_baru):
        if node is None:
            print("No. SKU yang diinputkan belum terdaftar.")
            os.system('pause')
            os.system('cls')
            return
        if node.SKU == SKU:
            node.jumlah_stok += jumlah_stok_baru
            print("Data stok barang berhasil di restok")
            os.system('pause')
            os.system('cls')
            return
        if SKU < node.SKU:
            self._restok_recursive(node.left, SKU, jumlah_stok_baru)
        else:
            self._restok_recursive(node.right, SKU, jumlah_stok_baru)


    def input_barang(self):
        SKU = int(input("Masukkan SKU barang (INTEGER ONLY): "))
        nama_barang = input("Masukkan nama barang: ")
        harga_satuan = float(input("Masukkan harga satuan barang: "))
        jumlah_stok = int(input("Masukkan jumlah stok barang: "))
        self.insert(SKU, nama_barang, harga_satuan, jumlah_stok)
        print("Data stok barang berhasil diinput.")

    def restok_barang(self):
        SKU = int(input("Masukkan SKU barang yang akan direstok: "))
        jumlah_stok_baru = int(input("Masukkan jumlah stok baru: "))
        self.restok(SKU, jumlah_stok_baru)

    

    def input_transaksi(self):
        nama_konsumen = input("Masukkan nama konsumen: ")
        SKU = int(input("Masukkan SKU barang yang dibeli: "))
        jumlah_beli = int(input("Masukkan jumlah barang yang dibeli: "))

        item = self._search_recursive(self.root, SKU)
        if item is None:
            print("No. SKU yang diinputkan belum terdaftar.")
            choice = input("Apakah ingin melanjutkan transaksi (Y/N)? ")
            if choice.lower() == "y":
                self.input_transaksi()
            return

        if item.jumlah_stok >= jumlah_beli:
            subtotal = item.harga_satuan * jumlah_beli
            item.jumlah_stok -= jumlah_beli
            dataTransaksi.append({
                "Nama Konsumen": nama_konsumen,
                "No. SKU barang yang dibeli": SKU,
                "Jumlah Beli": jumlah_beli,
                "Subtotal": subtotal
            })
            print("Data transaksi konsumen berhasil diinput.")
            choice = input("Apakah ingin menambahkan data pembelian untuk konsumen ini (Y/N)? ")
            if choice.lower() == "y":
                self.input_transaksi()
        else:
            print("Jumlah Stok No. SKU yang Anda beli tidak mencukupi.")
            choice = input("Apakah ingin melanjutkan transaksi (Y/N)? ")
            if choice.lower() == "y":
                self.input_transaksi()

    def tampilkan_data_transaksi_konsumen(self):
        print("\n=== DATA SELURUH TRANSAKSI KONSUMEN ===")
        if len(dataTransaksi) == 0:
            print("Belum ada transaksi.")
        else :
            for transaction in dataTransaksi:
                print("Nama Konsumen:", transaction["Nama Konsumen"])
                print("No. SKU barang yang dibeli:", transaction["No. SKU barang yang dibeli"])
                print("Jumlah Beli:", transaction["Jumlah Beli"])
                print("Subtotal:", transaction["Subtotal"])
                print("---------------------------")

    def tampilkan_data_transaksi_berdasarkan_subtotal(self):
        print("\n=== DATA TRANSAKSI KONSUMEN BERDASARKAN SUBTOTAL ===")
        subtotal_threshold = float(input("Masukkan batas subtotal transaksi: "))
        print("Data transaksi dengan subtotal di atas", subtotal_threshold)
        for transaction in dataTransaksi:
            if transaction["Subtotal"] > subtotal_threshold:
                print("Nama Konsumen:", transaction["Nama Konsumen"])
                print("No. SKU barang yang dibeli:", transaction["No. SKU barang yang dibeli"])
                print("Jumlah Beli:", transaction["Jumlah Beli"])
                print("Subtotal:", transaction["Subtotal"])
                print("---------------------------")

    def _search_recursive(self, node, SKU):
        if node is None or node.SKU == SKU:
            return node
        if SKU < node.SKU:
            return self._search_recursive(node.left, SKU)
        else:
            return self._search_recursive(node.right, SKU)


# MENU UTAMA
    def menu_utama(self):
        while True:
            print("\n=== MENU UTAMA ===")
            print("1) Kelola Stok Barang")
            print("2) Kelola Transaksi Konsumen")
            print("0) Exit Program")

            pilih = input("Masukkan pilihan Anda: ")
            if pilih == "1":
                os.system('cls')
                self.kelolaStokBarang()
            elif pilih == "2":
                os.system('cls')
                self.kelolaTransaksiKonsumen()
            elif pilih == "0":
                print('Terimakasih telah menggunakan program kami !')
                break
            else:
                print("Pilihan tidak valid. Silakan coba lagi.")
                os.system('pause')
                os.system('cls')

# 1. KELOLA STOK BARANG
    def kelolaStokBarang(self):
        while True:
            # SUB MENU (1)
            print("\n=== SUB MENU - KELOLA STOK BARANG ===")
            print("1) Input Data Stok Barang")
            print("2) Restok Barang")
            print("0) Kembali ke MENU UTAMA")

            pilihan = input("Masukkan pilihan Anda: ")
            if pilihan == "1":
                self.input_barang()
                os.system('pause')
                os.system('cls')
            elif pilihan == "2":
                self.restok_barang()
            elif pilihan == "0":
                os.system('cls')
                break
            else:
                print("Pilihan tidak valid. Silakan coba lagi.")

# 2. KELOLA TRANSAKSI KONSUMEN
    def kelolaTransaksiKonsumen(self):
        while True:
            # SUB MENU (2)
            print("\n=== SUB MENU - KELOLA TRANSAKSI KONSUMEN ===")
            print("1) Input Data Transaksi Baru")
            print("2) Lihat Data Seluruh Transaksi Konsumen")
            print("3) Lihat Data Transaksi Berdasarkan Subtotal")
            print("0) Kembali ke MENU UTAMA")

            pilihan = input("Masukkan pilihan Anda: ")
            if pilihan == "1":
                self.input_transaksi()
                os.system('pause')
                os.system('cls')
            elif pilihan == "2":
                self.tampilkan_data_transaksi_konsumen()
            elif pilihan == "3":
                self.tampilkan_data_transaksi_berdasarkan_subtotal()
            elif pilihan == "0":
                os.system('cls')
                break
            else:
                print("Pilihan tidak valid. Silakan coba lagi.")

# PROGRAM UTAMA
if __name__ == "__main__":
    bst = BinarySearchTree()
    bst.menu_utama()
